{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","findTab","tabId","find","tab","id","selectedTab","className","map","title","href","onClick","clickedTab","content","App","useState","setSelectedTabId","currentTab","ReactDOM","render","document","getElementById"],"mappings":"iMASaA,EAA4B,SAAC,GAEnC,IADLC,EACI,EADJA,KAAMC,EACF,EADEA,cAAeC,EACjB,EADiBA,cAEfC,EAAU,SAACC,GACf,OAAOJ,EAAKK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOH,MAAUJ,EAAK,IAStD,IAAMQ,EAAcL,EAAQF,GAE5B,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACJ,GACT,IAAQC,EAAcD,EAAdC,GAAII,EAAUL,EAAVK,MAEZ,OACE,oBAEEF,UAAWF,IAAOC,EAAYD,GAAK,YAAc,GACjD,UAAQ,MAHV,SAKE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,WAxBzB,IAAwBC,EAClBb,KADkBa,EAwBsBP,IAtB1CL,EAAcC,EAAQW,KAmBZ,SAKGH,KATEJ,UAiBf,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYO,cC5CRf,EAAO,CAClB,CAAEO,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASjB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBiB,EAAtB,KACMC,EAAanB,EAAKK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAON,MAAkBD,EAAK,GAKxE,OACE,sBAAKS,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAWR,SAGjC,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cAbgB,SAACI,GACrBY,EAAiBZ,EAAIC,WCdzBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.462f24c6.chunk.js","sourcesContent":["import React from 'react';\nimport { Tab } from '../../types/Tab';\n\ninterface TabsProps {\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n  tabs: Tab[],\n}\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs, selectedTabId, onTabSelected,\n}) => {\n  const findTab = (tabId: string) => {\n    return tabs.find((tab) => tab.id === tabId) || tabs[0];\n  };\n\n  function handleTabClick(clickedTab: string) {\n    if (selectedTabId !== clickedTab) {\n      onTabSelected(findTab(clickedTab));\n    }\n  }\n\n  const selectedTab = findTab(selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={id === selectedTab.id ? 'is-active' : ''}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabClick(id)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const currentTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currentTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}